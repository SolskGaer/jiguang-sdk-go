name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: false

      - name: Run lints
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        # See issue #507 of [actions/setup-go] for the reason why we are wrapping the version in single quotation marks.
        go-version: [ '1.16', '1.17', '1.18', '1.19', '1.20', '1.21', '1.22', '1.23', '1.24' ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Modify go.mod to use go ${{ matrix.go-version }}
        run: go mod edit -go=${{ matrix.go-version }}

      - name: Build code for compatibility check
        run: go build -v ./...

      - name: Execute pre-test scripts (if any)
        run: |
          echo "Looking for pre-test scripts in 'scripts' directory..."
          scripts=$(find ./scripts -type f -name 'pre-test_*')
          
          if [ -z "$scripts" ]; then
            echo "No pre-test scripts found."
          else
            for script in $scripts; do
              echo "Executing pre-test script: $script"
              chmod +x "$script"
              ./$script
            done
          fi

      - name: Run tests (if any)
        run: go test -v ./...

      - name: Execute post-test scripts (if any)
        run: |
          echo "Looking for post-test scripts in 'scripts' directory..."
          scripts=$(find ./scripts -type f -name 'post-test_*')

          if [ -z "$scripts" ]; then
            echo "No post-test scripts found."
          else
            for script in $scripts; do
              echo "Executing post-test script: $script"
              chmod +x "$script"
              ./$script
            done
          fi